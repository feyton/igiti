# Generated by Django 3.0.4 on 2020-04-25 13:08

import autoslug.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import store.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=30)),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('default', models.BooleanField(default=False)),
                ('address_type', models.CharField(choices=[('B', 'Billing'), ('S', 'Shipping')], default='S', max_length=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ecelogical_zone', models.CharField(choices=[('HIGH', 'Highland'), ('LOW', 'Lowlands'), ('Mid', 'Midlands')], default='Mid', max_length=255)),
            ],
            options={
                'verbose_name': 'district',
                'verbose_name_plural': 'districts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(blank=True, max_length=20, null=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('being_delivered', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='store.Address')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.Coupon')),
            ],
        ),
        migrations.CreateModel(
            name='SeedPretreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('types', models.CharField(choices=[('MC', 'Mechanical'), ('CH', 'Chemical')], default='MC', max_length=255)),
                ('process', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Seed Pre-Treatment',
                'verbose_name_plural': 'Seed Pre-Treatments',
            },
        ),
        migrations.CreateModel(
            name='TypesOfSeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ORT', 'Orthodox'), ('RECAL', 'Recalcitrant'), ('SUB-OR', 'Sub-Orthodox')], max_length=100)),
                ('storage_type', models.CharField(choices=[('RT', 'Room temperature'), ('CRT', 'Cold room temperature')], max_length=500, verbose_name='storage type')),
                ('max_years', models.IntegerField(blank=True, verbose_name='Max storage years')),
                ('min_years', models.IntegerField(blank=True, verbose_name='Min storage years')),
                ('max_moisture', models.IntegerField(blank=True, verbose_name='Max Storage Moisture')),
                ('min_moisture', models.IntegerField(blank=True, verbose_name='Min Storage Moisture')),
            ],
            options={
                'verbose_name': 'Seed Type',
                'verbose_name_plural': 'Seed Types',
            },
        ),
        migrations.CreateModel(
            name='SeedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scientific_name', models.CharField(max_length=255, verbose_name='scientific name')),
                ('common_name', models.CharField(blank=True, max_length=255, verbose_name='common name')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='scientific_name', unique=True, verbose_name='slug')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=store.utils.photo_path, verbose_name='image1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=store.utils.photo_path, verbose_name='image2')),
                ('price', models.IntegerField(verbose_name='price')),
                ('discount_price', models.FloatField(blank=True, null=True, verbose_name='discount')),
                ('available', models.BooleanField(default=True)),
                ('category', models.CharField(choices=[('FOR', 'Forestry'), ('AGR', 'Agroforestry')], help_text='Choose one', max_length=3)),
                ('recommended', models.BooleanField(default=False)),
                ('seeds_kg', models.IntegerField(blank=True, verbose_name='Seeds per Kilogram')),
                ('germination_rate', models.FloatField(verbose_name='Germination Rate')),
                ('seed_source', models.CharField(blank=True, max_length=255, verbose_name='Seed source')),
                ('short_note', models.TextField(blank=True, null=True, verbose_name='Short description')),
                ('plantation_districts', models.ManyToManyField(blank=True, to='store.District', verbose_name='Plantation districts')),
                ('pre_treatment', models.ManyToManyField(blank=True, to='store.SeedPretreatment')),
                ('seed_type', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.TypesOfSeed')),
            ],
            options={
                'verbose_name': 'Seed Product',
                'verbose_name_plural': 'Seed Products',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('accepted', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_charge_id', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('mobile_number', models.CharField(blank=True, max_length=13, null=True, verbose_name='mobile number')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.SeedProduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(to='store.OrderItem'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.Payment'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address', to='store.Address'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
